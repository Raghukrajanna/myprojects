package ATMpack;

import java.text.DecimalFormat;
import java.util.Scanner;

public class accountclass {
	Scanner input=new Scanner(System.in);
	DecimalFormat moneyFormat=new DecimalFormat("'$'###,#0.00");
	
	//t
	//set the customer number
	
	public int setCustomerNumber(int customerNumber)
	{
		this.customerNumber=customerNumber;
		return customerNumber;
	}
	
	//get the customer number
	
	public int getCustomerNumber()
	{
		return customerNumber;
	}
	
	//set pin number
	
	public int setPinNumber(int pinNumber)
	{
		this.pinNumber=pinNumber;
		return pinNumber;
	}
	
	//get pin number
	
	public int getPinNumber()
	{
		return pinNumber;
	}
	
	//get checking accc balance
	
	public double getCheckingBalance()
	{
		return checkingBalance;
	}
	
	
	//get saving acc balance
	
	public double getSavingBalance()
	{
		return savingBalance;
	}

	//calculate checking acc withdrawal
	
	public double calcCheckingWithdrawal(double amount)
	{
		checkingBalance=(checkingBalance - amount);
		return checkingBalance;
	}
	
	//calculate saving acc balance
	
	public double calcSavingWithdrawal(double amount)
	{
		savingBalance=(savingBalance - amount);
		return savingBalance;
	}
	
	//calculae checkinbg acc deposite
	
	public double calcCheckingDeposit(double amount)
	{
		checkingBalance=(checkingBalance + amount);
		return checkingBalance;
	}
	
	//calculaet saving acc deposit
	
	public double calcSvingDeposit(double amount)
	{
		savingBalance=(savingBalance+amount);
		return savingBalance;
	}
	
	//customer checking withdrawal
	
	public void getCheckingWithdrwalInput()
	{
		System.out.println("checking acc balance:"+ moneyFormat.format(checkingBalance));
		System.out.println("amount you want to withdraw from checking account");
		double amount=input.nextDouble();
		
		if((checkingBalance - amount)>0)
		{
			calcCheckingWithdrawal(amount);
			System.out.println("new checking account balance"+moneyFormat.format(checkingBalance));
		}
		else
		{
			System.out.println("balance cannot be negative"+"\n");
		}
	}
	
	//customer saving account withdraw input
	
	public void getSavingWithdrawInput()
	{
		System.out.println("saving acc balance:"+ moneyFormat.format(savingBalance));
		System.out.println("amount you want to withdraw from saving account");
		double amount=input.nextDouble();
		
		if((savingBalance - amount)>0)
		{
			calcSavingWithdrawal(amount);
			System.out.println("new checking account balance"+ moneyFormat.format(savingBalance));
		}
		else
		{
			System.out.println("balance cannot be negative"+"\n");
		}
	}
	
	//customer checking account deposit input
	
	public void getCheckingDepositInput()
	{
		System.out.println("checking the account balance"+ moneyFormat.format(checkingBalance));
		System.out.println("ammount you want to deposit from checking accont");
		double amount=input.nextDouble();
		
		if((checkingBalance + amount)>0)
		{
			calcCheckingDeposit(amount);
			System.out.println("new checking account balance"+ moneyFormat.format(checkingBalance));
		}
		else
		{
			System.out.println("balance cannot be negative"+"\n");
		}
	}
	
	//customer saving account deposit input
	
	public void getSavingDepositInput()
	{
		System.out.println("saving the account balance"+ moneyFormat.format(savingBalance));
		System.out.println("ammount you want to deposit from checking accont");
		double amount=input.nextDouble();
		
		if((savingBalance + amount)>0)
		{
			calcSvingDeposit(amount);
			System.out.println("new saving account balance"+ moneyFormat.format(savingBalance));
		}
		else
		{
			System.out.println("balance cannot be negative"+"\n");
		}
	}
	
	private int customerNumber;
	private int pinNumber;
	private double checkingBalance=0;
	private double savingBalance=0;
	
}
